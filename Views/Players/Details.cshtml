@model NewLEaderboard.Models.Player
@using System.Text.RegularExpressions;

@{
    ViewData["Title"] = "Player Profile";
    ViewData["Header"] = "Player Profile";

    string characterClass;
    string characterLowercase;
    string characterRemoveSpecial;
    string imageLink;
}

@{
    characterClass = Model.MainCharacter;
    characterRemoveSpecial = Regex.Replace(characterClass, @"[\W_]", string.Empty);
    characterLowercase = characterRemoveSpecial.ToLower();
    imageLink = "../../img/characters/" + characterLowercase + ".png";
}

<div class="playerprofile-container">
    <div class="playerprofile-card">
        <div class="row">

            <div class="col-md-6">

                <div class="playerprofile-blackskewed">

                    <div class="playerprofile-name">
                        @Html.DisplayFor(model => model.UserName)
                    </div>

                    <div class="playerprofile-discord">
                        <img src="~/img/discord-icon.svg"> @Html.DisplayFor(model => model.DiscordTag)
                    </div>

                </div>

            </div>

            <div class="col-md-6">
                <div class="playerprofile-character">
                    <img src="@imageLink">
                </div>
            </div>

        </div>
    </div>

    <div class="row">

        <div class="col-md-6 p-lr-20">

            <div class="playerprofile-title">
                Statistics
            </div>

            <div class="playerprofile-stats-content">
                <div>
                    <table>
                        <tr>
                            <td>
                                League Points:
                            </td>
                            <td>
                                <strong>
                                    @Html.DisplayFor(model => model.TotalPoints) LP
                                </strong>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Tournament Entries:
                            </td>
                            <td>
                                <strong>
                                    @Html.DisplayFor(model => model.WeeksCompeted)
                                </strong>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                First Place Finishes:
                            </td>
                            <td>
                                <strong>
                                    @Html.DisplayFor(model => model.AmountFirstPlace)
                                </strong>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Second Place Finishes:&nbsp;&nbsp;&nbsp;
                            </td>
                            <td>
                                <strong>
                                    @Html.DisplayFor(model => model.AmountSecondPlace)
                                </strong>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Third Place Finishes:
                            </td>
                            <td>
                                <strong>
                                    @Html.DisplayFor(model => model.AmountThirdPlace)
                                </strong>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="playerprofile-title">
                Tournament History
            </div>

            <div class="playerprofile-history">

                @if (Model.Results.Any())
                {
                    @foreach (var result in Model.Results)
                    {
                        int pointsGained = 0;
                        switch (result.Placing)
                        {
                            case 1:
                                pointsGained = 15;
                                break;
                            case 2:
                                pointsGained = 12;
                                break;
                            case 3:
                                pointsGained = 10;
                                break;
                            case 4:
                                pointsGained = 8;
                                break;
                            case 5:
                                pointsGained = 6;
                                break;
                            case 7:
                                pointsGained = 4;
                                break;
                            case 9:
                                pointsGained = 2;
                                break;
                            default:
                                pointsGained = 1;
                                break;
                        }
                        <a asp-controller="Tournaments" asp-action="Details" asp-route-id="@result.Tournament.TournamentId">
                            <div class="history-item">
                                <div>
                                    <strong>@result.Tournament.TournamentName</strong> | @result.Tournament.TournamentDate.ToShortDateString()
                                </div>
                                <div>
                                    Placing: <strong>@result.Placing</strong> | Character: <strong>@result.CharacterUsed</strong>
                                </div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <p>This player has not entered any tournaments yet.</p>
                }

            </div>

        </div>

    </div>

</div>
